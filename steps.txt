1.Create a folder and open with vs code
    >> mkdir "food-delivery"
    >> cd "food-delivery"

2.Open the termonal and create the vite+react folder for frontend.
    >> npm create vite@latest
    > name: frontend
    > select>React
    > select>javascript

3.Open frontend folder and install npm and some dependency
    >> cd frontend
    >> npm install
    >> npm i react-router-dom
    >> npm run dev
    > copy the port and check it. it's working or not.

4.Open App.jsx and remove all and type "rafce"
    > it is the 'reactArrowFunctionExportComponent'
    > and hit Enter
    > it gives the complete export function formate.

5.Delete App.css file.

6.Open index.css and remove all and write for your own.
*{
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
body{
  min-height: 100vh;
}
a{
  text-decoration: none;
  color: inherit;
}

7.Open 'index.html' and change the title of the file.
<title>Food Delivery</title>

8.Create new folder in src filder-
    >> mkdir components
    for creating the multiple components.
    >> mkdir pages
    for creating the multiple pages for the website.

9.  >> cd components
    >> Navbar.jsx
        > type 'rafce' for create the Export function for the Navbar and write the code for this-
        > 
    
    >> Navbar.css
    creating the Navbar.jsx and Navbar.css for the Navbar component.

10. download All assets for this website and use it using the assets.jsx to emport all the assets.
    > 





Backend-
------------
1. mkdir Backend > cd backend > npm init -y

2. install the all dependency
    >> npm install express mongoose jsonwebtoken bcrypt cors dotenv body-parser multer stripe validator nodemon

3. Create the folders and .env file for our backend
    >> config, controllers, middleware, models, routes, uploads
    >> one file >> .env

4. package.json >>  "type": "module",

5. server.js >>
import express from 'express';
import cors from 'cors';

// aap config
const app = express();
const port = 4000

// middleware
app.use(express.json())
app.use(cors())

app.get('/', (req, res)=>{
    res.send("API is Working !")
})

app.listen(port, ()=>{
    console.log(`Server Started on http://localhost:${port}`);
})

6. run "npm run server" and check it on the server.

7. config > db.js
import mongoose from 'mongoose';

const connectDB = async ()=>{
    await mongoose.connect("mongodb+srv://codewithaayu:codewithaayu@fooddelivery.khmagic.mongodb.net/?retryWrites=true&w=majority&appName=FoodDelivery").then(()=>console.log("DB Connected"));

}
export default connectDB;

8. 



Admin
------
create frontend for Admin using react.
pakages : npm i axios react-tostify react-router-dom

9:17 min resume>>>>>>>>>>>>>>>>>>





skills: react vite@latest - for frontend
        node js  - for backend
        mongoDB  - for database
        thunder client - api testing
        postman   - api testing
        github   - for pushing to our repository
        
