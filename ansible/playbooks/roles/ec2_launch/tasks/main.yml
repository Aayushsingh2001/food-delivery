---
# tasks file for ec2_launch
- name: Adding SSH access to security group
  amazon.aws.ec2_group:
    name: "{{ sg_name }}"
    description: Security group for ansible launched via ansible
    region: "{{ aws_region }}"
    rules: "{{ security_group_rules }}"
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: security_group
    
- name: Getting information about existing Ec2 ec2_instance.instances
  amazon.aws.ec2_instance_info:
    region: "{{ aws_region }}"
    filters:
      "tag:Name": "Ansible-created-instance-*"
      instance-state-name: ["running", "pending"]
  register: existing_instances

- name: Calculate number of instances to launched
  set_fact:
    instance_to_launch: "{{ ec2_instance_count | int - existing_instances.instances | length }}"

- name: Debug instances to launch
  debug:
    msg: "{{ instance_to_launch }}"

- name: Launch EC2 instance
  amazon.aws.ec2_instance:
    region: "{{ aws_region }}"
    name: " Ansible-created_instance-{{existing_instances.instances|length + item}} "
    key_name: "{{ ec2_key_name }}"
    instance_type: "{{ ec2_instance_type }}"
    image_id: "{{ ec2_ami_id }}"
    security_group: "{{ security_group.group_id }}"
    wait: yes
    count: 1
    network:
      assign_public_ip: yes
  register: new_ec2
  loop: "{{ range(1, instance_to_launch|int + 1)| list }}"
  when: instance_to_launch | int > 0

- name: Combine existing and new instances
  set_fact:
    all_instances: "{{ existing_instances.instances + (new_ec2.results | default([]) | map(attribute='instances') | flatten) }}"

- name: Waiting for instances to be ready
  wait_for:
    host: "{{ item.public_dns_name }}"
    port: 22
    delay: 30
    timeout: 300
    state: started
  loop: "{{ all_instances }}"


- name: Add new instance to inventory
  add_host:
    name: "{{ item.public_dns_name }}"
    groups: launched_ec2_instances
    ansible_ssh_private_key_file: "{{ ec2_ssh_key_path}}"
    ansible_user: "{{ ec2_ssh_user }}"
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
  loop: "{{ all_instances }}"

- name: Debug SSH key ec2_ssh_key_path
  debug:
    var: ec2_ssh_key_path

- name: Debug dynamin inventory
  debug:
    msg: "All instances: {{ groups['launched_ec2_instances']}}"